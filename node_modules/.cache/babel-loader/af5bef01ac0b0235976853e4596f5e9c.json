{"ast":null,"code":"var _jsxFileName = \"C:\\\\Digikull\\\\Assignments\\\\tip-calculator-hooks\\\\tip-calculator\\\\src\\\\components\\\\InputDetailsHooks.js\";\nimport React, { useState } from 'react';\nimport CustomerSummaryHooks from '../components/CustomerSummaryHooks';\n\nfunction InputDetailsHooks() {\n  const [inputItem, setInputItem] = useState({\n    bamt: 0,\n    per: '',\n    tip: 0,\n    custName: '',\n    totalTip: 0,\n    custCount: 0\n  });\n  const [custArray, setCustArray] = useState([]);\n\n  const handleAdd = () => {\n    setCustArray([...custArray, {\n      name: inputItem.custName,\n      bal: inputItem.bamt,\n      serPer: inputItem.per,\n      tip: inputItem.bamt * inputItem.per\n    }]);\n  };\n\n  const customerTotal = () => {\n    var totalTip = 0,\n        custCount = 0;\n    custArray.forEach(item => {\n      totalTip += item.tip;\n    });\n    setInputItem({ ...inputItem,\n      totalTip: totalTip,\n      custCount: custArray.length\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Enter your bill amount\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.bamt,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        bamt: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"How was the service\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: inputItem.per,\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        per: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Excelent - 20%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Moderate - 10%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0.05\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Bad - 5%\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputItem.custName,\n    placeholder: \"Customer Name\",\n    onChange: event => {\n      setInputItem({ ...inputItem,\n        custName: event.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), console.log(inputItem), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    value: \"Add Customer\",\n    onClick: event => {\n      handleAdd();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), console.log(custArray), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Customer List\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, custArray.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, `${item.name} offered a tip of Rs. ${item.tip}`)))), /*#__PURE__*/React.createElement(CustomerSummaryHooks, {\n    sumCust: inputItem.custCount,\n    sumTip: inputItem.totalTip,\n    sumCustomerTotal: customerTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default InputDetailsHooks;","map":{"version":3,"sources":["C:/Digikull/Assignments/tip-calculator-hooks/tip-calculator/src/components/InputDetailsHooks.js"],"names":["React","useState","CustomerSummaryHooks","InputDetailsHooks","inputItem","setInputItem","bamt","per","tip","custName","totalTip","custCount","custArray","setCustArray","handleAdd","name","bal","serPer","customerTotal","forEach","item","length","event","target","value","console","log","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,oBAAP,MAAkC,oCAAlC;;AAEA,SAASC,iBAAT,GAA8B;AAC1B,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAC,CAAN;AACCC,IAAAA,GAAG,EAAC,EADL;AAECC,IAAAA,GAAG,EAAC,CAFL;AAGCC,IAAAA,QAAQ,EAAC,EAHV;AAICC,IAAAA,QAAQ,EAAC,CAJV;AAKCC,IAAAA,SAAS,EAAC;AALX,GAAD,CAA3C;AAQA,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMa,SAAS,GAAG,MAAM;AACAD,IAAAA,YAAY,CAAE,CAAE,GAAGD,SAAL,EACd;AAACG,MAAAA,IAAI,EAAGX,SAAS,CAACK,QAAlB;AACAO,MAAAA,GAAG,EAAGZ,SAAS,CAACE,IADhB;AAEAW,MAAAA,MAAM,EAAGb,SAAS,CAACG,GAFnB;AAGAC,MAAAA,GAAG,EAAGJ,SAAS,CAACE,IAAV,GAAiBF,SAAS,CAACG;AAHjC,KADc,CAAF,CAAZ;AAMC,GAPzB;;AASA,QAAMW,aAAa,GAAG,MAAM;AACA,QAAIR,QAAQ,GAAE,CAAd;AAAA,QAAkBC,SAAS,GAAG,CAA9B;AAEAC,IAAAA,SAAS,CAACO,OAAV,CAAmBC,IAAD,IAAQ;AACtBV,MAAAA,QAAQ,IAAIU,IAAI,CAACZ,GAAjB;AACH,KAFD;AAIAH,IAAAA,YAAY,CAAE,EAAC,GAAGD,SAAJ;AAAeM,MAAAA,QAAQ,EAAEA,QAAzB;AACVC,MAAAA,SAAS,EAAEC,SAAS,CAACS;AADX,KAAF,CAAZ;AAEH,GATzB;;AAWA,sBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEjB,SAAS,CAACE,IAApC;AACA,IAAA,QAAQ,EAAGgB,KAAD,IAAS;AAACjB,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAcE,QAAAA,IAAI,EAAEgB,KAAK,CAACC,MAAN,CAAaC;AAAjC,OAAD,CAAZ;AAAsD,KAD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARJ,eASI;AAAQ,IAAA,KAAK,EAAIpB,SAAS,CAACG,GAA3B;AACA,IAAA,QAAQ,EAAGe,KAAD,IAAS;AAACjB,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAcG,QAAAA,GAAG,EAAEe,KAAK,CAACC,MAAN,CAAaC;AAAhC,OAAD,CAAZ;AAAqD,KADzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CATJ,eAgBI;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,KAAK,EAAIpB,SAAS,CAACK,QAAxC;AAAkD,IAAA,WAAW,EAAE,eAA/D;AACA,IAAA,QAAQ,EAAGa,KAAD,IAAS;AAACjB,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAcK,QAAAA,QAAQ,EAAEa,KAAK,CAACC,MAAN,CAAaC;AAArC,OAAD,CAAZ;AAA0D,KAD9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,EAkBKC,OAAO,CAACC,GAAR,CAAYtB,SAAZ,CAlBL,eAmBI;AAAO,IAAA,IAAI,EAAG,QAAd;AAAwB,IAAA,KAAK,EAAE,cAA/B;AAA8C,IAAA,OAAO,EAAGkB,KAAD,IAAS;AAACR,MAAAA,SAAS;AAAG,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EAqBKW,OAAO,CAACC,GAAR,CAAYd,SAAZ,CArBL,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAvBJ,eAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,SAAS,CAACe,GAAV,CAAc,CAACP,IAAD,EAAOQ,KAAP,kBACX;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAU,GAAER,IAAI,CAACL,IAAK,yBAAwBK,IAAI,CAACZ,GAAK,EAAxD,CAAhB,CADH,CADD,CAxBJ,eA6BI,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEJ,SAAS,CAACO,SAAzC;AAAoD,IAAA,MAAM,EAAEP,SAAS,CAACM,QAAtE;AAAgF,IAAA,gBAAgB,EAAGQ,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADR;AAiCH;;AAED,eAAef,iBAAf","sourcesContent":["import React , { useState } from 'react'\r\nimport CustomerSummaryHooks from  '../components/CustomerSummaryHooks'\r\n\r\nfunction InputDetailsHooks () {\r\n    const [inputItem , setInputItem] = useState({bamt:0,\r\n                                                 per:'',\r\n                                                 tip:0,\r\n                                                 custName:'',\r\n                                                 totalTip:0,\r\n                                                 custCount:0\r\n                                                })\r\n    \r\n    const [custArray , setCustArray] = useState([])\r\n\r\n    const handleAdd = () => {\r\n                            setCustArray( [ ...custArray,\r\n                            {name : inputItem.custName,\r\n                            bal : inputItem.bamt,\r\n                            serPer : inputItem.per,\r\n                            tip : inputItem.bamt * inputItem.per}\r\n                            ] )\r\n                            }\r\n                            \r\n    const customerTotal = () => {\r\n                                var totalTip =0 , custCount = 0\r\n                                \r\n                                custArray.forEach((item)=>{\r\n                                    totalTip += item.tip\r\n                                })\r\n                                \r\n                                setInputItem ({...inputItem, totalTip: totalTip,\r\n                                    custCount: custArray.length})\r\n                            }\r\n                        \r\n    return(\r\n            <div>\r\n                <strong>Enter your bill amount</strong>\r\n                <br/>\r\n                <br/>\r\n                <input type='text' value={inputItem.bamt} \r\n                onChange={(event)=>{setInputItem({...inputItem,bamt: event.target.value})}} />\r\n                <br/>\r\n                <br/>\r\n                <strong>How was the service</strong>\r\n                <select value = {inputItem.per} \r\n                onChange={(event)=>{setInputItem({...inputItem,per: event.target.value})}}>\r\n                    <option value='0'>Choose...</option>\r\n                    <option value='0.2'>Excelent - 20%</option>\r\n                    <option value='0.1'>Moderate - 10%</option>\r\n                    <option value='0.05'>Bad - 5%</option>\r\n                </select>\r\n                <input type = 'text' value = {inputItem.custName} placeholder ='Customer Name'\r\n                onChange={(event)=>{setInputItem({...inputItem,custName: event.target.value})}}/>\r\n                {console.log(inputItem)}\r\n                <input type = 'button'  value =\"Add Customer\" onClick={(event)=>{handleAdd()}} />\r\n                \r\n                {console.log(custArray)}\r\n                <br/>\r\n                <strong>Customer List</strong>\r\n                <ul>\r\n                {custArray.map((item, index) => (\r\n                    <li key={index}><strong>{`${item.name} offered a tip of Rs. ${item.tip }`}</strong></li>\r\n                        ))}\r\n                </ul>\r\n                <CustomerSummaryHooks sumCust={inputItem.custCount} sumTip={inputItem.totalTip} sumCustomerTotal= {customerTotal} />\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default InputDetailsHooks"]},"metadata":{},"sourceType":"module"}